# Check the package
check()
library(devtools)
# Load the devtools package
library(usethis)
library(devtools)
# Check the package
check()
# Check the package
check()
# install.packages(c("devtools", "roxygen2", "usethis", "testthat"))
detach(package:DXMarkers)
devtools::document()
# Check the package
check()
# Check the package
check()
# 重新加载.RData文件
load("all.markers.RData")
setwd("/home/data/t050446/01 Single Cell Project/Acute Pancreatitis")
# 重新加载.RData文件
load("all.markers.RData")
# 重新加载.RData文件
load("scRNA4_markers.RData")
# Load the devtools package
library(usethis)
library(devtools)
# install.packages(c("devtools", "roxygen2", "usethis", "testthat"))
#detach(package:DXMarkers)
# Check the package
check()
# install.packages(c("devtools", "roxygen2", "usethis", "testthat"))
#detach(package:DXMarkers)
# Check the package
check()
# install.packages(c("devtools", "roxygen2", "usethis", "testthat"))
#detach(package:DXMarkers)
# Check the package
check()
# install.packages(c("devtools", "roxygen2", "usethis", "testthat"))
#detach(package:DXMarkers)
# Check the package
check()
# Load the devtools package
library(usethis)
library(devtools)
# install.packages(c("devtools", "roxygen2", "usethis", "testthat"))
#detach(package:DXMarkers)
# Check the package
check()
rlang::last_trace()
# Load the devtools package
library(usethis)
library(devtools)
# install.packages(c("devtools", "roxygen2", "usethis", "testthat"))
#detach(package:DXMarkers)
# Check the package
check()
rlang::last_trace()
rlang::last_trace(drop = FALSE)
# install.packages(c("devtools", "roxygen2", "usethis", "testthat"))
#detach(package:DXMarkers)
# Check the package
check()
getwd()
setwd("/home/data/t050446/Non-tumor research/DXMarkers")
# Load the devtools package
library(usethis)
library(devtools)
# install.packages(c("devtools", "roxygen2", "usethis", "testthat"))
#detach(package:DXMarkers)
# Check the package
check()
# install.packages(c("devtools", "roxygen2", "usethis", "testthat"))
#detach(package:DXMarkers)
# Check the package
check()
# install.packages(c("devtools", "roxygen2", "usethis", "testthat"))
#detach(package:DXMarkers)
# Check the package
check()
# install.packages(c("devtools", "roxygen2", "usethis", "testthat"))
#detach(package:DXMarkers)
# Check the package
check()
library(utils)
library(devtools)
# install.packages(c("devtools", "roxygen2", "usethis", "testthat"))
#detach(package:DXMarkers)
# Check the package
check()
# install.packages(c("devtools", "roxygen2", "usethis", "testthat"))
#detach(package:DXMarkers)
# Check the package
check()
# install.packages(c("devtools", "roxygen2", "usethis", "testthat"))
#detach(package:DXMarkers)
# Check the package
check()
# install.packages(c("devtools", "roxygen2", "usethis", "testthat"))
#detach(package:DXMarkers)
# Check the package
check()
# install.packages(c("devtools", "roxygen2", "usethis", "testthat"))
#detach(package:DXMarkers)
# Check the package
check()
# install.packages(c("devtools", "roxygen2", "usethis", "testthat"))
#detach(package:DXMarkers)
# Check the package
check()
# install.packages(c("devtools", "roxygen2", "usethis", "testthat"))
#detach(package:DXMarkers)
# Check the package
check()
# install.packages(c("devtools", "roxygen2", "usethis", "testthat"))
#detach(package:DXMarkers)
# Check the package
check()
getwd()
setwd("/home/data/t050446/Non-tumor research/DXMarkers")
# Load the devtools package
library(usethis)
library(utils)
library(devtools)
# install.packages(c("devtools", "roxygen2", "usethis", "testthat"))
#detach(package:DXMarkers)
# Check the package
check()
# install.packages(c("devtools", "roxygen2", "usethis", "testthat"))
#detach(package:DXMarkers)
# Check the package
check()
# install.packages(c("devtools", "roxygen2", "usethis", "testthat"))
#detach(package:DXMarkers)
# Check the package
check()
# install.packages(c("devtools", "roxygen2", "usethis", "testthat"))
#detach(package:DXMarkers)
# Check the package
check()
library(readr)
# 读取CSV文件
csv_file <- file.path("/home/data/t050446/Non-tumor research/DXMarkers/data", "CellMarker_all_cell_markers.csv")
CellMarker_all_cell_markers <- read_csv(csv_file)
setwd("/home/data/t050446/Non-tumor research/DXMarkers")
library(readr)
# 读取CSV文件
csv_file <- file.path("/home/data/t050446/Non-tumor research/DXMarkers/data", "CellMarker_all_cell_markers.csv")
CellMarker_all_cell_markers <- read_csv(csv_file)
csv_file <- file.path("/home/data/t050446/Non-tumor research/DXMarkers/data", "CellMarker_all_cell_markers.csv")
if (!file.exists(csv_file)) {
print("File does not exist, please check the file path.")
} else {
print("File exists.")
}
getwd()
setwd("/home/data/t050446/Non-tumor research/DXMarkers")
library(readr)
# 读取CSV文件
csv_file <- file.path("/home/data/t050446/Non-tumor research/DXMarkers/data", "CellMarker_all_cell_markers.csv")
CellMarker_all_cell_markers <- read_csv(csv_file)
csv_file <- file.path("/home/data/t050446/Non-tumor research/DXMarkers/data", "CellMarker2.0_Cell_marker_All.csv")
CellMarker2_0_Cell_marker_All <- read_csv(csv_file)
csv_file <- file.path("/home/data/t050446/Non-tumor research/DXMarkers/data", "PanglaoDB_markers_27_Mar_2020.csv")
PanglaoDB_markers <- read_csv(csv_file)
# 保存R对象为.rda文件
save(CellMarker_all_cell_markers, file = "/home/data/t050446/Non-tumor research/DXMarkers/data/CellMarker_all_cell_markers.rda")
save(CellMarker2_0_Cell_marker_All, file = "/home/data/t050446/Non-tumor research/DXMarkers/data/CellMarker2_0_Cell_marker_All.rda")
save(PanglaoDB_markers, file = "/home/data/t050446/Non-tumor research/DXMarkers/data/PanglaoDB_markers.rda")
csv_file <- file.path("/home/data/t050446/Non-tumor research/DXMarkers/data", "CellMarker_all_cell_markers.csv")
if (!file.exists(csv_file)) {
print("File does not exist, please check the file path.")
} else {
print("File exists.")
}
#' Annotate Cell and Gene Markers from Multiple Databases
#'
#' @param top10genes_path file path of the top 10 genes csv file
#' @param species species name, 'Mouse' or 'Human'
#' @param tissue_class tissue class to filter
#'
#' @return a dataframe of the filtered data
#'
#' @importFrom dplyr filter select mutate
#' @importFrom tidyr separate_rows
#' @importFrom readr read_csv
#' @importFrom utils write.csv
#' @importFrom utils readRDS
annotate_markers <- function(top10genes_path, species, tissue_class) {
library(dplyr)
library(tidyr)
library(readr)
# Based on species selection
if (species == 'Mouse') {
sp1 <- 'Mouse'
sp2 <- 'Mm'
} else if (species == 'Human') {
sp1 <- 'Human'
sp2 <- 'Hs'
} else {
stop("Invalid species. Please choose either 'Mouse' or 'Human'.")
}
# Load internal data using 'data' function
data1 <- data("CellMarker")
data2 <- data("CellMarker2.0")
data3 <- data("PanglaoDB")
# 选择需要的列并添加新列"source"
data1 <- data1 %>%
select(species, tissue_class, cell_type, cell_name, geneSymbol, PMID) %>%
mutate(source = "CellMarker")
data2 <- data2 %>%
select(species, tissue_class, cell_type, cell_name, geneSymbol, PMID) %>%
mutate(source = "CellMarker2.0")
data3 <- data3 %>%
select(species, tissue_class, cell_type, cell_name, geneSymbol, PMID) %>%
mutate(source = "PanglaoDB")
# 筛选出对应species的行
data1 <- data1 %>%
separate_rows(geneSymbol, sep = ", ") %>%
filter(species == sp1)
data2 <- data2 %>%
separate_rows(geneSymbol, sep = ", ") %>%
filter(species == sp1)
# 将species列分割为多行，然后筛选出species为"Mm"或"Hs"的行
data3 <- data3 %>%
separate_rows(geneSymbol, sep = ", ") %>%
separate_rows(species, sep = " ") %>%
filter(species == sp2)
# 合并所有的数据框
data <- rbind(data1, data2, data3)
# 读取你的cluster文件
cluster_data <- read_csv(top10genes_path)
# 创建一个空的数据框，用于保存所有的筛选结果
all_filtered_data <- data.frame()
# 循环处理每个cluster
for (cluster in names(cluster_data)) {
# 从当前cluster中获取symbol列表
your_symbol_list <- cluster_data[[cluster]]
# 筛选出tissue_class为用户指定的tissue_class且geneSymbol在your_symbol_list中的行
filtered_data <- data %>%
filter(tissue_class == tissue_class, geneSymbol %in% your_symbol_list)
# 如果筛选出的数据不为空，则写入到CSV文件
if (nrow(filtered_data) > 0) {
# 添加新的列"cluster"，其值为当前循环的cluster名
filtered_data$cluster <- cluster
# 将筛选出的数据添加到all_filtered_data
all_filtered_data <- rbind(all_filtered_data, filtered_data)
}
}
return(all_filtered_data)
}
# 添加一个数据集列表，包含数据来源名称和对应的数据集
data_list <- list(
"CellMarker" = readRDS(system.file("data", "CellMarker_all_cell_markers.rds", package = "DXMarkers")),
"CellMarker2.0" = readRDS(system.file("data", "CellMarker2_0_Cell_marker_All.rds", package = "DXMarkers")),
"PanglaoDB" = readRDS(system.file("data", "PanglaoDB_markers.rds", package = "DXMarkers"))
)
# 定义一个数据访问函数，用户可以通过键入data并提供数据来源名称来访问数据
data <- function(data_source) {
if (data_source %in% names(data_list)) {
return(data_list[[data_source]])
} else {
stop("Invalid data source. Available data sources are: CellMarker, CellMarker2.0, PanglaoDB.")
}
}
# 假设你的R包项目目录是"DXMarkers"，请将路径替换为你的实际路径
getwd()
setwd("/home/data/t050446/Non-tumor research/DXMarkers")
# 使用devtools包进行打包
devtools::build("/home/data/t050446/Non-tumor research/DXMarkers")
# install.packages(c("devtools", "roxygen2", "usethis", "testthat"))
#detach(package:DXMarkers)
# Check the package
check()
# install.packages(c("devtools", "roxygen2", "usethis", "testthat"))
#detach(package:DXMarkers)
# Check the package
check()
# install.packages(c("devtools", "roxygen2", "usethis", "testthat"))
#detach(package:DXMarkers)
# Check the package
check()
# install.packages(c("devtools", "roxygen2", "usethis", "testthat"))
#detach(package:DXMarkers)
# Check the package
check()
# install.packages(c("devtools", "roxygen2", "usethis", "testthat"))
#detach(package:DXMarkers)
# Check the package
check()
devtools::document()
# 假设你的R包项目目录是"DXMarkers"，请将路径替换为你的实际路径
getwd()
setwd("/home/data/t050446/Non-tumor research/DXMarkers")
# 使用devtools包进行打包
devtools::build("/home/data/t050446/Non-tumor research/DXMarkers")
getwd()
setwd("/home/data/t050446/01 Single Cell Project/Acute Pancreatitis")
library(devtools)
install_local("/home/data/t050446/Non-tumor research/DXMarkers_1.0.tar.gz")
library(DXMarkers)
result <- annotate_markers("cluster3/top10_sorted_genes.csv", "Mouse", "Liver")
rlang::last_trace()
result <- annotate_markers("cluster3/top10_sorted_genes.csv", "Mouse", "Pancreas")
rlang::last_trace()
# Print all column names of the data object
print(names(CellMarker_all_cell_markers))
# Check if 'geneSymbol' is in the column names of the data object
'geneSymbol' %in% names(CellMarker_all_cell_markers)
View(CellMarker_all_cell_markers)
getwd()
setwd("/home/data/t050446/Non-tumor research/DXMarkers")
library(readr)
# 读取CSV文件
csv_file <- file.path("/home/data/t050446/Non-tumor research/DXMarkers/data", "CellMarker_all_cell_markers.csv")
CellMarker_all_cell_markers <- read_csv(csv_file, .name_repair = "minimal")
getwd()
setwd("/home/data/t050446/Non-tumor research/DXMarkers")
library(readr)
# 读取CSV文件
csv_file <- file.path("/home/data/t050446/Non-tumor research/DXMarkers/data", "CellMarker_all_cell_markers.csv")
CellMarker_all_cell_markers <- read.csv(csv_file, check.names = FALSE)
csv_file <- file.path("/home/data/t050446/Non-tumor research/DXMarkers/data", "CellMarker2.0_Cell_marker_All.csv")
CellMarker2_0_Cell_marker_All <- read.csv(csv_file, check.names = FALSE)
csv_file <- file.path("/home/data/t050446/Non-tumor research/DXMarkers/data", "PanglaoDB_markers_27_Mar_2020.csv")
PanglaoDB_markers <- read.csv(csv_file, check.names = FALSE)
# 保存R对象为.rda文件
save(CellMarker_all_cell_markers, file = "/home/data/t050446/Non-tumor research/DXMarkers/data/CellMarker_all_cell_markers.rda")
save(CellMarker2_0_Cell_marker_All, file = "/home/data/t050446/Non-tumor research/DXMarkers/data/CellMarker2_0_Cell_marker_All.rda")
save(PanglaoDB_markers, file = "/home/data/t050446/Non-tumor research/DXMarkers/data/PanglaoDB_markers.rda")
View(CellMarker_all_cell_markers)
# 假设你的R包项目目录是"DXMarkers"，请将路径替换为你的实际路径
getwd()
setwd("/home/data/t050446/Non-tumor research/DXMarkers")
# 使用devtools包进行打包
devtools::build("/home/data/t050446/Non-tumor research/DXMarkers")
library(devtools)
install_local("/home/data/t050446/Non-tumor research/DXMarkers_1.0.tar.gz")
library(DXMarkers)
result <- annotate_markers("cluster3/top10_sorted_genes.csv", "Mouse", "Pancreas")
rlang::last_trace()
View(CellMarker_all_cell_markers)
View(top10)
View(data_list)
rlang::last_trace(drop = FALSE)
load("~/01 Single Cell Project/Acute Pancreatitis/.RData")
